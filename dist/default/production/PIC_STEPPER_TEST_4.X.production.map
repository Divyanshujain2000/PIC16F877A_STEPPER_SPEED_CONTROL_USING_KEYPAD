Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\PIC_STEPPER_TEST_4.X.production.sym \
  --cmf=dist/default/production\PIC_STEPPER_TEST_4.X.production.cmf -z \
  -Q16F877A -oC:\Users\DIVYAN~1\AppData\Local\Temp\sa0s.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/PIC_STEPPER_TEST_4.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\DIVYAN~1\AppData\Local\Temp\sa0s.o \
  dist/default/production\PIC_STEPPER_TEST_4.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\DIVYAN~1\AppData\Local\Temp\sa0s.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\PIC_STEPPER_TEST_4.X.production.o
                cinit                                15       15       33        8       0
                intentry                              4        4        E        8       0
                config                             2007     2007        1        0       4
                text23                              634      634       67        8       0
                text22                              5CD      5CD       67        8       0
                text21                              69B      69B       5D        8       0
                text20                              753      753       59        8       0
                text19                              2CA      2CA       B2        8       0
                text18                              4F5      4F5       6D        8       0
                text17                              EFC      EFC        8     1DF8       0
                text16                              FA2      FA2       25     1F44       0
                text15                              216      216       B4        8       0
                text14                              F43      F43       15     1E86       0
                text13                              FC7      FC7       39     1F8E       0
                text12                              F34      F34        F     1E68       0
                text11                              F1A      F1A        D     1E34       0
                text10                              130      130       E6        8       0
                text9                               F70      F70       19     1EE0       0
                text8                               F04      F04        A     1E08       0
                text7                               F27      F27        D     1E4E       0
                text6                               488      488       6D        8       0
                text5                               419      419       6F        8       0
                text4                               562      562       6B        8       0
                text3                               37C      37C       9D        8       0
                text2                               6F8      6F8       5B        8       0
                text1                                48       48       E8        8       0
                maintext                            F89      F89       19     1F12       0
                cstackBANK0                          20       20       1C       20       1
                cstackCOMMON                         70       70        D       70       1
                cstackBANK1                          A0       A0       20       A0       1
                inittext                            7EC      7EC       13        8       0
                dataBANK3                           190      190       40      190       1
                dataBANK1                            C0       C0        C       A0       1
                dataBANK0                            3C       3C       18       20       1
                bssBANK0                             54       54        6       20       1
                strings                             800      800       28     1000       0
                nvBANK1                              CC       CC        2       A0       1
                idataBANK3                          7AC      7AC       40        8       0
                idataBANK1                          F0E      F0E        C     1E1C       0
                idataBANK0                          F58      F58       18     1EB0       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       33         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text23                              634      634       67         0
                text22                              5CD      5CD       67         0
                text21                              69B      69B       5D         0
                text20                              753      753       59         0
                text19                              2CA      2CA       B2         0
                text18                              4F5      4F5       6D         0
                text17                              EFC      EFC        8         0
                text16                              FA2      FA2       25         0
                text15                              216      216       B4         0
                text14                              F43      F43       15         0
                text13                              FC7      FC7       39         0
                text12                              F34      F34        F         0
                text11                              F1A      F1A        D         0
                text10                              130      130       E6         0
                text9                               F70      F70       19         0
                text8                               F04      F04        A         0
                text7                               F27      F27        D         0
                text6                               488      488       6D         0
                text5                               419      419       6F         0
                text4                               562      562       6B         0
                text3                               37C      37C       9D         0
                text2                               6F8      6F8       5B         0
                text1                                48       48       E8         0
                maintext                            F89      F89       19         0
                inittext                            7EC      7EC       13         0
                idataBANK3                          7AC      7AC       40         0
                idataBANK1                          F0E      F0E        C         0
                idataBANK0                          F58      F58       18         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800       28         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        D         1

        CLASS   BANK0          
                cstackBANK0                          20       20       1C         1
                dataBANK0                            3C       3C       18         1
                bssBANK0                             54       54        6         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       20         1
                dataBANK1                            C0       C0        C         1
                nvBANK1                              CC       CC        2         1

        CLASS   BANK2          

        CLASS   BANK3          
                dataBANK3                           190      190       40         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007FB  0007FF         8       0  CODE        2
                cstackBANK0                    000020  00003A  00005A        20       1  BANK0       1
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                cstackBANK1                    0000A0  00002E  0000CE        A0       1  BANK1       1
                dataBANK3                      000190  000040  0001D0       190       1  BANK3       1
                strings                        000800  000028  000828      1000       0  STRING      2
                text17                         000EFC  000008  000F04      1DF8       0  CODE        2
                text8                          000F04  00000A  000F0E      1E08       0  CODE        2
                idataBANK1                     000F0E  00000C  000F1A      1E1C       0  CODE        2
                text11                         000F1A  00000D  000F27      1E34       0  CODE        2
                text7                          000F27  00000D  000F34      1E4E       0  CODE        2
                text12                         000F34  00000F  000F43      1E68       0  CODE        2
                text14                         000F43  000015  000F58      1E86       0  CODE        2
                idataBANK0                     000F58  000018  000F70      1EB0       0  CODE        2
                text9                          000F70  000019  000F89      1EE0       0  CODE        2
                maintext                       000F89  000019  000FA2      1F12       0  CODE        2
                text16                         000FA2  000025  000FC7      1F44       0  CODE        2
                text13                         000FC7  000039  001000      1F8E       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005A-006F             16           1
        BANK1            00CE-00EF             22           1
        BANK2            0110-016F             60           1
        BANK3            01D0-01EF             20           1
        CODE             0003-0003              1           2
                         07FF-07FF              1
                         0828-0EFB            6D4
                         1000-1FFF            800
        COMMON           007D-007D              1           1
        CONST            0003-0003              1           2
                         07FF-07FF              1
                         0828-0EFB            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FF-07FF              1
                         0828-0EFB            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              005A-006F             16           1
                         00CE-00EF             22
                         0110-016F             60
                         01D0-01EF             20
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FF-07FF              1
                         0828-0EFB            6D4
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FF-07FF              1
                         0828-0EFB            100
                         1000-1FFF            100

                                  Symbol Table

?___aldiv                cstackBANK1  00A0
?___awdiv                cstackCOMMON 0070
?___awmod                cstackBANK1  00A0
?___wmul                 cstackCOMMON 0070
?i1___awmod              cstackCOMMON 0070
INTR_CALL_WORK@flag      cstackBANK0  0032
INTR_CALL_WORK@i         cstackBANK0  0034
INTR_CALL_WORK@num       cstackBANK0  0036
LCDBusyLoop@busy         cstackBANK1  00A2
LCDBusyLoop@status       cstackBANK1  00A4
LCDBusyLoop@temp         cstackBANK1  00A3
LCDByte@c                cstackBANK1  00AA
LCDByte@hn               cstackBANK1  00A8
LCDByte@isdata           cstackBANK1  00A5
LCDByte@ln               cstackBANK1  00A9
LCDByte@temp             cstackBANK1  00AB
LCDInit@__i              cstackBANK1  00AF
LCDInit@style            cstackBANK1  00AE
LCDWriteInt@F912         bssBANK0     0054
LCDWriteInt@field_length cstackBANK0  0022
LCDWriteInt@i            cstackBANK0  002D
LCDWriteInt@j            cstackBANK0  002B
LCDWriteInt@str          cstackBANK0  0026
LCDWriteInt@val          cstackBANK0  0020
LCDWriteString@cc        cstackBANK0  0020
LCDWriteString@msg       cstackBANK0  0021
SETSPEED@a               cstackBANK1  00B9
SETSPEED@i               cstackBANK1  00B7
SETSPEED@maxstep         cstackBANK1  00B3
SETSPEED@t               cstackBANK1  00BC
SETSPEED@x               cstackBANK1  00B5
SETSPEED@y               cstackBANK1  00BA
_GIE                     (abs)        005F
_HALF_STEP               dataBANK1    00C0
_INITH                   text8        0F04
_INITSTEPPER             text7        0F27
_INTE                    (abs)        005C
_INTF                    (abs)        0059
_INTR_CALL_WORK          text10       0130
_LCDBusyLoop             text6        0488
_LCDByte                 text5        0419
_LCDInit                 text4        0562
_LCDWriteInt             text19       02CA
_LCDWriteString          text18       04F5
_OPTION_REG              (abs)        0081
_OPTION_REGbits          (abs)        0081
_PEIE                    (abs)        005E
_PORTA                   (abs)        0005
_PORTC                   (abs)        0007
_PORTD                   (abs)        0008
_RB4                     (abs)        0034
_RB5                     (abs)        0035
_RB6                     (abs)        0036
_RB7                     (abs)        0037
_RC0                     (abs)        0038
_RC1                     (abs)        0039
_RC2                     (abs)        003A
_RC3                     (abs)        003B
_RD1                     (abs)        0041
_RD2                     (abs)        0042
_RD3                     (abs)        0043
_SETSPEED                text1        0048
_STOP                    text17       0EFC
_TRISA                   (abs)        0085
_TRISB                   (abs)        0086
_TRISBbits               (abs)        0086
_TRISCbits               (abs)        0087
_TRISD                   (abs)        0088
_TRISDbits               (abs)        0088
_Timer_isr               text9        0F70
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK0              bssBANK0     0000
__Hcinit                 cinit        0048
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0000
__HcstackBANK1           cstackBANK1  0000
__HcstackCOMMON          cstackCOMMON 0000
__HdataBANK0             dataBANK0    0000
__HdataBANK1             dataBANK1    0000
__HdataBANK3             dataBANK3    0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0015
__Hfunctab               functab      0000
__HidataBANK0            idataBANK0   0000
__HidataBANK1            idataBANK1   0000
__HidataBANK3            idataBANK3   0000
__Hinit                  init         0012
__Hinittext              inittext     0000
__Hintentry              intentry     0012
__Hmaintext              maintext     0000
__HnvBANK1               nvBANK1      0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0003
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        1000
__Hspace_1               (abs)        01D0
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hspace_4               (abs)        400F
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK0              bssBANK0     0000
__Lcinit                 cinit        0015
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackBANK1           cstackBANK1  0000
__LcstackCOMMON          cstackCOMMON 0000
__LdataBANK0             dataBANK0    0000
__LdataBANK1             dataBANK1    0000
__LdataBANK3             dataBANK3    0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0012
__Lfunctab               functab      0000
__LidataBANK0            idataBANK0   0000
__LidataBANK1            idataBANK1   0000
__LidataBANK3            idataBANK3   0000
__Linit                  init         0012
__Linittext              inittext     0000
__Lintentry              intentry     0004
__Lmaintext              maintext     0000
__LnvBANK1               nvBANK1      0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        1000
__S1                     (abs)        01D0
__S2                     (abs)        0000
__S3                     (abs)        0000
___aldiv                 text3        037C
___aldiv@counter         cstackBANK1  00A9
___aldiv@dividend        cstackBANK1  00A4
___aldiv@divisor         cstackBANK1  00A0
___aldiv@quotient        cstackBANK1  00AB
___aldiv@sign            cstackBANK1  00AA
___awdiv                 text23       0634
___awdiv@counter         cstackCOMMON 0075
___awdiv@dividend        cstackCOMMON 0072
___awdiv@divisor         cstackCOMMON 0070
___awdiv@quotient        cstackCOMMON 0077
___awdiv@sign            cstackCOMMON 0076
___awmod                 text2        06F8
___awmod@counter         cstackBANK1  00A5
___awmod@dividend        cstackBANK1  00A2
___awmod@divisor         cstackBANK1  00A0
___awmod@sign            cstackBANK1  00A6
___cgram                 dataBANK3    0190
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
___stackhi               (abs)        0000
___stacklo               (abs)        0000
___wmul                  text16       0FA2
___wmul@multiplicand     cstackCOMMON 0072
___wmul@multiplier       cstackCOMMON 0070
___wmul@product          cstackCOMMON 0074
__end_of_INITH           text8        0F0E
__end_of_INITSTEPPER     text7        0F34
__end_of_INTR_CALL_WORK  text10       0216
__end_of_LCDBusyLoop     text6        04F5
__end_of_LCDByte         text5        0488
__end_of_LCDInit         text4        05CD
__end_of_LCDWriteInt     text19       037C
__end_of_LCDWriteString  text18       0562
__end_of_SETSPEED        text1        0130
__end_of_STOP            text17       0F04
__end_of_Timer_isr       text9        0F89
__end_of___aldiv         text3        0419
__end_of___awdiv         text23       069B
__end_of___awmod         text2        0753
__end_of___wmul          text16       0FC7
__end_of__initialization cinit        0044
__end_of__stringtab      strings      0806
__end_of_get_key         text14       0F58
__end_of_get_str         text13       1000
__end_of_get_value       text15       02CA
__end_of_init_keypad     text12       0F43
__end_of_main            maintext     0FA2
__end_ofi1_INITSTEPPER   text11       0F27
__end_ofi1_LCDBusyLoop   text22       0634
__end_ofi1_LCDByte       text21       06F8
__end_ofi1___awmod       text20       07AC
__initialization         cinit        0015
__pbssBANK0              bssBANK0     0054
__pcstackBANK0           cstackBANK0  0020
__pcstackBANK1           cstackBANK1  00A0
__pcstackCOMMON          cstackCOMMON 0070
__pdataBANK0             dataBANK0    003C
__pdataBANK1             dataBANK1    00C0
__pdataBANK3             dataBANK3    0190
__pidataBANK0            idataBANK0   0F58
__pidataBANK1            idataBANK1   0F0E
__pidataBANK3            idataBANK3   07AC
__pintentry              intentry     0004
__pmaintext              maintext     0F89
__pnvBANK1               nvBANK1      00CC
__pstrings               strings      0800
__ptext1                 text1        0048
__ptext10                text10       0130
__ptext11                text11       0F1A
__ptext12                text12       0F34
__ptext13                text13       0FC7
__ptext14                text14       0F43
__ptext15                text15       0216
__ptext16                text16       0FA2
__ptext17                text17       0EFC
__ptext18                text18       04F5
__ptext19                text19       02CA
__ptext2                 text2        06F8
__ptext20                text20       0753
__ptext21                text21       069B
__ptext22                text22       05CD
__ptext23                text23       0634
__ptext3                 text3        037C
__ptext4                 text4        0562
__ptext5                 text5        0419
__ptext6                 text6        0488
__ptext7                 text7        0F27
__ptext8                 text8        0F04
__ptext9                 text9        0F70
__size_of_INITH          (abs)        0000
__size_of_INITSTEPPER    (abs)        0000
__size_of_INTR_CALL_WORK (abs)        0000
__size_of_LCDBusyLoop    (abs)        0000
__size_of_LCDByte        (abs)        0000
__size_of_LCDInit        (abs)        0000
__size_of_LCDWriteInt    (abs)        0000
__size_of_LCDWriteString (abs)        0000
__size_of_SETSPEED       (abs)        0000
__size_of_STOP           (abs)        0000
__size_of_Timer_isr      (abs)        0000
__size_of___aldiv        (abs)        0000
__size_of___awdiv        (abs)        0000
__size_of___awmod        (abs)        0000
__size_of___wmul         (abs)        0000
__size_of_get_key        (abs)        0000
__size_of_get_str        (abs)        0000
__size_of_get_value      (abs)        0000
__size_of_init_keypad    (abs)        0000
__size_of_main           (abs)        0000
__size_ofi1_INITSTEPPER  (abs)        0000
__size_ofi1_LCDBusyLoop  (abs)        0000
__size_ofi1_LCDByte      (abs)        0000
__size_ofi1___awmod      (abs)        0000
__stringbase             strings      0805
__stringtab              strings      0800
_a                       bssBANK0     0059
_flag                    nvBANK1      00CC
_get_key                 text14       0F43
_get_str                 text13       0FC7
_get_value               text15       0216
_init_keypad             text12       0F34
_keypad                  dataBANK0    003C
_main                    maintext     0F89
_s                       dataBANK1    00C8
btemp                    (abs)        007E
end_of_initialization    cinit        0044
get_key@key              cstackCOMMON 0071
get_str@i                cstackBANK0  002A
get_str@key1             cstackBANK0  002C
get_str@str              cstackBANK0  0020
i1LCDBusyLoop@busy       cstackCOMMON 0072
i1LCDBusyLoop@status     cstackCOMMON 0074
i1LCDBusyLoop@temp       cstackCOMMON 0073
i1LCDByte@c              cstackCOMMON 007A
i1LCDByte@hn             cstackCOMMON 0078
i1LCDByte@isdata         cstackCOMMON 0075
i1LCDByte@ln             cstackCOMMON 0079
i1LCDByte@temp           cstackCOMMON 007B
i1_INITSTEPPER           text11       0F1A
i1_LCDBusyLoop           text22       05CD
i1_LCDByte               text21       069B
i1___awmod               text20       0753
i1___awmod@counter       cstackCOMMON 0075
i1___awmod@dividend      cstackCOMMON 0072
i1___awmod@divisor       cstackCOMMON 0070
i1___awmod@sign          cstackCOMMON 0076
init_fetch0              inittext     07EC
init_ram0                inittext     07F0
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
reset_vec                reset_vec    0000
saved_w                  (abs)        007E
start                    init         0012
start_initialization     cinit        0015
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 90 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_INITH
		_INITSTEPPER
		_LCDInit
		_SETSPEED
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _SETSPEED *****************
 Defined at:
		line 40 in file "MYSTEPPER.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR long 
		 -> s(4), 
 Auto vars:     Size  Location     Type
  a               1   25[BANK1 ] PTR long 
		 -> s(4), 
  i               2   23[BANK1 ] int 
  t               4   28[BANK1 ] unsigned long 
  y               2   26[BANK1 ] int 
  x               2   21[BANK1 ] int 
  maxstep         2   19[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0      13       0       0
      Temps:          0       0       4       0       0
      Totals:         0       0      17       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___aldiv
		___awmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK1 ] int 
  dividend        2    2[BANK1 ] int 
 Auto vars:     Size  Location     Type
  sign            1    6[BANK1 ] unsigned char 
  counter         1    5[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK1 ] long 
  dividend        4    4[BANK1 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   11[BANK1 ] long 
  sign            1   10[BANK1 ] unsigned char 
  counter         1    9[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK1 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       8       0       0
      Locals:         0       0       6       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0      15       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function _LCDInit *****************
 Defined at:
		line 193 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  style           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  style           1   14[BANK1 ] unsigned char 
  __i             1   15[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCDBusyLoop
		_LCDByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDByte *****************
 Defined at:
		line 80 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
  isdata          1    5[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  c               1   10[BANK1 ] unsigned char 
  temp            1   11[BANK1 ] unsigned char 
  ln              1    9[BANK1 ] unsigned char 
  hn              1    8[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       4       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDBusyLoop
 This function is called by:
		_LCDInit
		_LCDGotoXY
 This function uses a non-reentrant model


 *************** function _LCDBusyLoop *****************
 Defined at:
		line 135 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    4[BANK1 ] unsigned char 
  temp            1    3[BANK1 ] unsigned char 
  busy            1    2[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       3       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_LCDByte
		_LCDInit
 This function uses a non-reentrant model


 *************** function _INITSTEPPER *****************
 Defined at:
		line 33 in file "MYSTEPPER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _INITH *****************
 Defined at:
		line 13 in file "HARDWARE_INTRP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Timer_isr *****************
 Defined at:
		line 80 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_INTR_CALL_WORK
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _INTR_CALL_WORK *****************
 Defined at:
		line 39 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   20[BANK0 ] int 
  flag            2   18[BANK0 ] int 
  num             2   22[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCDWriteInt
		_LCDWriteString
		_STOP
		___wmul
		_get_str
		_init_keypad
		i1_INITSTEPPER
		i1_LCDByte
 This function is called by:
		_Timer_isr
 This function uses a non-reentrant model


 *************** function i1_INITSTEPPER *****************
 Defined at:
		line 33 in file "MYSTEPPER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTR_CALL_WORK
 This function uses a non-reentrant model


 *************** function _init_keypad *****************
 Defined at:
		line 13 in file "MYKEYPAD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTR_CALL_WORK
 This function uses a non-reentrant model


 *************** function _get_str *****************
 Defined at:
		line 73 in file "MYKEYPAD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  str            10    0[BANK0 ] unsigned char [10]
  i               2   10[BANK0 ] int 
  key1            1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      13       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      13       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_get_key
 This function is called by:
		_INTR_CALL_WORK
 This function uses a non-reentrant model


 *************** function _get_key *****************
 Defined at:
		line 63 in file "MYKEYPAD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  key             1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_get_value
 This function is called by:
		_get_str
 This function uses a non-reentrant model


 *************** function _get_value *****************
 Defined at:
		line 32 in file "MYKEYPAD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_key
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMMON] unsigned int 
  multiplicand    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTR_CALL_WORK
 This function uses a non-reentrant model


 *************** function _STOP *****************
 Defined at:
		line 77 in file "MYSTEPPER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTR_CALL_WORK
 This function uses a non-reentrant model


 *************** function _LCDWriteString *****************
 Defined at:
		line 252 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  msg             1    wreg     PTR const unsigned char 
		 -> STR_5(5), STR_4(8), STR_3(6), STR_2(5), 
		 -> STR_1(10), 
 Auto vars:     Size  Location     Type
  msg             1    1[BANK0 ] PTR const unsigned char 
		 -> STR_5(5), STR_4(8), STR_3(6), STR_2(5), 
		 -> STR_1(10), 
  cc              1    0[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       2       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_LCDByte
 This function is called by:
		_INTR_CALL_WORK
 This function uses a non-reentrant model


 *************** function _LCDWriteInt *****************
 Defined at:
		line 308 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  val             2    0[BANK0 ] int 
  field_length    1    2[BANK0 ] char 
 Auto vars:     Size  Location     Type
  str             5    6[BANK0 ] unsigned char [5]
  i               2   13[BANK0 ] int 
  j               2   11[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      15       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		i1_LCDByte
		i1___awmod
 This function is called by:
		_INTR_CALL_WORK
 This function uses a non-reentrant model


 *************** function i1___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCDWriteInt
 This function uses a non-reentrant model


 *************** function i1_LCDByte *****************
 Defined at:
		line 80 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
  isdata          1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  c               1   10[COMMON] unsigned char 
  temp            1   11[COMMON] unsigned char 
  ln              1    9[COMMON] unsigned char 
  hn              1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_LCDBusyLoop
 This function is called by:
		_INTR_CALL_WORK
		_LCDWriteString
		_LCDWriteInt
 This function uses a non-reentrant model


 *************** function i1_LCDBusyLoop *****************
 Defined at:
		line 135 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    4[COMMON] unsigned char 
  temp            1    3[COMMON] unsigned char 
  busy            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_LCDByte
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    7[COMMON] int 
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         9       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCDWriteInt
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
MYSTEPPER.c
		_STOP          		CODE           	0EFC	0000	8
		_SETSPEED      		CODE           	0048	0000	232
		_INITSTEPPER   		CODE           	0F27	0000	13

MYSTEPPER.c estimated size: 253

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	06F8	0000	91

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c estimated size: 91

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0FA2	0000	37

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c estimated size: 37

HARDWARE_INTRP.c
		_INITH         		CODE           	0F04	0000	10

HARDWARE_INTRP.c estimated size: 10

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	0634	0000	103

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c estimated size: 103

shared
		__stringtab    		STRING         	0800	0000	6
		i1_INITSTEPPER 		CODE           	0F1A	0000	13
		i1_LCDByte     		CODE           	069B	0000	93
		__initialization		CODE           	0015	0000	47
		i1___awmod     		CODE           	0753	0000	89
		i1_LCDBusyLoop 		CODE           	05CD	0000	103

shared estimated size: 351

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	037C	0000	157

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c estimated size: 157

lcd_hd44780_pic16.c
		_LCDByte       		CODE           	0419	0000	111
		_LCDWriteInt   		CODE           	02CA	0000	178
		_LCDInit       		CODE           	0562	0000	107
		_LCDWriteString		CODE           	04F5	0000	109
		_LCDBusyLoop   		CODE           	0488	0000	109

lcd_hd44780_pic16.c estimated size: 614

main.c
		_Timer_isr     		CODE           	0F70	0000	25
		_main          		CODE           	0F89	0000	25
		_INTR_CALL_WORK		CODE           	0130	0000	230

main.c estimated size: 280

MYKEYPAD.c
		_get_value     		CODE           	0216	0000	180
		_get_str       		CODE           	0FC7	0000	57
		_init_keypad   		CODE           	0F34	0000	15
		_get_key       		CODE           	0F43	0000	21

MYKEYPAD.c estimated size: 273

